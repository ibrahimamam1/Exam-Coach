problem: Write a C program to calculate the factorial of a given number using a loop.
answer: #include <stdio.h>

int factorial(int n) {
    int result = 1;
    for (int i = 1; i <= n; i++) {
        result *= i;
    }
    return result;
}

int main() {
    int num = 5;
    int fact = factorial(num);
    printf("The factorial of %d is %d\n", num, fact);
    return 0;
}


problem: Problem: Write a C program to check if a given number is prime or not.
answer: #include <stdio.h>

int isPrime(int n) {
    if (n <= 1) {
        return 0; // Not prime
    }
    for (int i = 2; i <= n / 2; i++) {
        if (n % i == 0) {
            return 0; // Not prime
        }
    }
    return 1; // Prime
}

int main() {
    int num = 17;
    if (isPrime(num)) {
        printf("%d is a prime number\n", num);
    } else {
        printf("%d is not a prime number\n", num);
    }
    return 0;
}

problem: Problem: Write a C program to find the sum of digits of a given number.
answer: #include <stdio.h>

int sumOfDigits(int n) {
    int sum = 0;
    while (n > 0) {
        sum += n % 10;
        n /= 10;
    }
    return sum;
}

int main() {
    int num = 12345;
    int sum = sumOfDigits(num);
    printf("The sum of digits of %d is %d\n", num, sum);
    return 0;
}


problem: Problem: Write a C program to calculate the average of N numbers entered by the user.
answer: #include <stdio.h>

int main() {
    int n;
    printf("Enter the number of elements: ");
    scanf("%d", &n);

    int sum = 0;
    int num;
    for (int i = 1; i <= n; i++) {
        printf("Enter number %d: ", i);
        scanf("%d", &num);
        sum += num;
    }

    double average = (double) sum / n;
    printf("The average is %.2f\n", average);

    return 0;
}


problem: Problem: Write a C program to find the largest element in an array.
answer: #include <stdio.h>

int findLargestElement(int arr[], int size) {
    int max = arr[0];
    for (int i = 1; i < size; i++) {
        if (arr[i] > max) {
            max = arr[i];
        }
    }
    return max;
}

int main() {
    int arr[] = {10, 5, 20, 8, 15};
    int size = sizeof(arr) / sizeof(arr[0]);

    int largest = findLargestElement(arr, size);
    printf("The largest element is %d\n", largest);

    return 0;
}
